name: Build

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/**'
      - 'README.md'
      - 'tsconfig.json'
      - 'tslint.json'

jobs:
  Build:
    name: 'Build'
    runs-on: ubuntu-latest
    if: "!(contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[skip build]'))"
    steps:
      - name: Checkout Project
        uses: actions/checkout@v1
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Restore CI Cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-14-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        run: yarn --ignore-scripts --frozen-lockfile
      - name: Copy Config
        run: cp src/config.example.ts src/config.ts
      - name: Push Code
        run: |
          #!/bin/bash
          set -euxo pipefail
          echo -e "\n# Initialize some useful variables"
          REPO="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          BRANCH_OR_TAG=`awk -F/ '{print $2}' <<< $GITHUB_REF`
          CURRENT_BRANCH=`awk -F/ '{print $NF}' <<< $GITHUB_REF`
          if [ "$BRANCH_OR_TAG" == "heads" ]; then
            SOURCE_TYPE="branch"
          else
            SOURCE_TYPE="tag"
          fi
          echo -e "\n# Checkout the repo in the target branch"
          TARGET_BRANCH="build"
          git clone $REPO out -b $TARGET_BRANCH
          yarn build
          echo -e "\n# Move the generated dist to the newly-checked-out repo, to be committed and pushed"
          mv package.json out/package.json
          rsync -vau dist out/
          echo -e "\n# Commit and push"
          cd out
          git add --all .
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git commit -m "TSC build: ${GITHUB_SHA}" || true
          git push origin $TARGET_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.PENGU_SECRET }}